version: '3.7'

services:
  backend:
    container_name: backend
    restart: always
    build: ./backend
    command: gunicorn config.wsgi:application --bind :80 --preload --workers 3
    volumes:
      - static_volume:/home/app/src/static
      - media_volume:/home/app/src/media
      - backend_logs:/home/app/logs/backend
    expose:
      - 80
    env_file: ./backend/.env
    depends_on:
      - db
      - rabbitmq
    links:
      - db
      - rabbitmq
  nginx:
    container_name: nginx
    restart: always
    build: ./nginx
    volumes:
      - static_volume:/home/app/src/static
      - media_volume:/home/app/src/media
    ports:
      - 80:80
    env_file: ./backend/.env
    depends_on:
      - backend
  db:
    container_name: db
    restart: always
    image: postgres:12.0-alpine
    env_file: ./backend/.env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    volumes:
      - postgres_data:/var/lib/postgresql/data/
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: rabbitmq
      RABBITMQ_DEFAULT_PASS: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbitmq_etc:/etc/rabbitmq
      - rabbitmq_data:/var/lib/rabbitmq
      - rabbitmq_logs:/home/app/logs/rabbitmq
volumes:
  postgres_data:
  static_volume:
  media_volume:
  backend_logs:
  rabbitmq_etc:
  rabbitmq_data:
  rabbitmq_logs: